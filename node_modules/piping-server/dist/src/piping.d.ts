/// <reference types="node" />
/// <reference types="node" />
import * as http from "http";
import * as http2 from "http2";
import * as log4js from "log4js";
type HttpReq = http.IncomingMessage | http2.Http2ServerRequest;
type HttpRes = http.ServerResponse | http2.Http2ServerResponse;
type Handler = (req: HttpReq, res: HttpRes) => void;
export declare class Server {
    private params;
    private static getNReceivers;
    private readonly pathToEstablished;
    private readonly pathToUnestablishedPipe;
    constructor(params?: {
        readonly logger?: log4js.Logger;
    });
    generateHandler(useHttps: boolean): Handler;
    private handleReservedPath;
    private runPipe;
    private removeEstablished;
    private handleSender;
    private handleReceiver;
    private createSenderOrReceiver;
}
export {};
